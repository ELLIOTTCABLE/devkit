commit e07596e95a876ced37baa0ba26656346c9b9cabb
Author: Roman Vorobets <roman.vorobets@gmail.com>
Date:   Thu May 2 11:10:15 2013 +0300

    Add support for POSIX sysconf

diff --git a/_oasis b/_oasis
index afca957..9ab666d 100644
--- a/_oasis
+++ b/_oasis
@@ -47,7 +47,7 @@ Library extunix
             resource.c, mman.c, time.c, pts.c, execinfo.c, malloc.c,
             endian.c, read_cred.c, fexecve.c, sendmsg.c,
             memalign.c, endianba.c, pread_pwrite_ba.c, bigarray.c,
-            common.c, common.h
+            sysconf.c, common.c, common.h
   BuildDepends: unix, bigarray
 
 Executable test
diff --git a/_tags b/_tags
index 24832ad..0e792a0 100644
--- a/_tags
+++ b/_tags
@@ -44,6 +44,7 @@
 "src/endianba.c": oasis_library_extunix_ccopt
 "src/pread_pwrite_ba.c": oasis_library_extunix_ccopt
 "src/bigarray.c": oasis_library_extunix_ccopt
+"src/sysconf.c": oasis_library_extunix_ccopt
 "src/common.c": oasis_library_extunix_ccopt
 <src/extunix.{cma,cmxa}>: use_libextunix_stubs
 <src/*.ml{,i}>: pkg_unix
@@ -104,6 +105,8 @@
 "src/pread_pwrite_ba.c": pkg_bigarray
 "src/bigarray.c": pkg_unix
 "src/bigarray.c": pkg_bigarray
+"src/sysconf.c": pkg_unix
+"src/sysconf.c": pkg_bigarray
 "src/common.c": pkg_unix
 "src/common.c": pkg_bigarray
 # Executable test
diff --git a/setup.ml b/setup.ml
index 946a788..4e702d8 100644
--- a/setup.ml
+++ b/setup.ml
@@ -5902,6 +5902,7 @@ let setup_t =
                            "endianba.c";
                            "pread_pwrite_ba.c";
                            "bigarray.c";
+                           "sysconf.c";
                            "common.c";
                            "common.h"
                         ];
diff --git a/src/discover.ml b/src/discover.ml
index f0336f8..cbacb78 100644
--- a/src/discover.ml
+++ b/src/discover.ml
@@ -277,6 +277,7 @@ let features =
     "MKSTEMPS", L[ I "stdlib.h"; S"mkstemps"; ];
     "MKOSTEMPS", L[ I "stdlib.h"; S"mkostemps"; ];
     "SETRESUID", L[ I"sys/types.h"; I"unistd.h"; S"setresuid"; S"setresgid" ];
+    "SYSCONF", L[ I "stdlib.h"; S"sysconf"; ];
   ]
 
 let () = 
diff --git a/src/extUnix.mlpp b/src/extUnix.mlpp
index 21ae471..f2b7336 100644
--- a/src/extUnix.mlpp
+++ b/src/extUnix.mlpp
@@ -1701,6 +1701,74 @@ let recvmsg_nofd fd =
 
 END
 
+HAVE SYSCONF
+
+(** {2 sysconf}
+
+{b Author:} Roman Vorobets *)
+
+(** the name of the variable *)
+type conf =
+  | ARG_MAX               (** The maximum length of the arguments to the exec(3)
+                              family of functions.  *)
+  | CHILD_MAX             (** The max number of simultaneous processes per user
+                              ID.  *)
+  | HOST_NAME_MAX         (** Max length of a hostname, not including the
+                              terminating null byte, as returned by
+                              gethostname(2).  *)
+  | LOGIN_NAME_MAX        (** Maximum length of a login name, including the
+                              terminating null byte.  *)
+  | CLK_TCK               (** The number of clock ticks per second.  *)
+  | OPEN_MAX              (** The maximum number of files that a process can
+                              have open at any time.  *)
+  | PAGESIZE              (** Size of a page in bytes.  *)
+  | RE_DUP_MAX            (** The number of repeated occurrences of a BRE
+                              permitted by regexec(3) and regcomp(3).  *)
+  | STREAM_MAX            (** The  maximum number of streams that a process can
+                              have open at any time.  *)
+  | SYMLOOP_MAX           (** The maximum number of symbolic links seen in a
+                              pathname before resolution returns ELOOP.  *)
+  | TTY_NAME_MAX          (** The maximum length of terminal device name,
+                              including the terminating null byte.  *)
+  | TZNAME_MAX            (** The maximum number of bytes in a timezone name.
+                              *)
+  | POSIX_VERSION         (** Indicates the year and month the POSIX.1 standard
+                              was approved in the format YYYYMML; the value
+                              199009L indicates the Sept. 1990 revision.  *)
+  | BC_BASE_MAX           (** Indicates the maximum obase value accepted by the
+                              bc(1) utility.  *)
+  | BC_DIM_MAX            (** Indicates the maximum value of elements permitted
+                              in an array by bc(1).  *)
+  | BC_SCALE_MAX          (** Indicates the maximum scale value allowed by
+                              bc(1).  *)
+  | BC_STRING_MAX         (** Indicates the maximum length of a string accepted
+                              by bc(1).  *)
+  | COLL_WEIGHTS_MAX      (** Indicates the maximum numbers of weights that can
+                              be assigned to an entry of the LC_COLLATE order
+                              keyword in the locale definition file  *)
+  | EXPR_NEST_MAX         (** Indicates the maximum number of expressions which
+                              can be nested within parentheses by expr(1).  *)
+  | LINE_MAX              (** The maximum length of a utility's input line,
+                              either from standard input or from a file.  This
+                              includes space for a trailing newline.  *)
+  | POSIX2_VERSION        (** Indicates the version of the POSIX.2 standard in
+                              the format of YYYYMML.  *)
+  | POSIX2_C_DEV          (** Indicates whether the POSIX.2 C language
+                              development facilities are supported.  *)
+  | POSIX2_FORT_DEV       (** Indicates whether the POSIX.2 FORTRAN development
+                              utilities are supported.  *)
+  | POSIX2_FORT_RUN       (** Indicates whether the POSIX.2 FORTRAN runtime
+                              utilities are supported.  *)
+  | POSIX2_LOCALEDEF      (** Indicates whether the POSIX.2 creation of locates
+                              via localedef(1) is supported.  *)
+  | POSIX2_SW_DEV         (** Indicates whether the POSIX.2 software development
+                              utilities option is supported.  *)
+
+(** get configuration information at runtime *)
+external sysconf: conf -> int32 = "caml_extunix_sysconf"
+
+END
+
 (** {2 Bigarray variants} *)
 
 (** *)
diff --git a/src/libextunix_stubs.clib b/src/libextunix_stubs.clib
index 1397447..c44ad3f 100644
--- a/src/libextunix_stubs.clib
+++ b/src/libextunix_stubs.clib
@@ -28,5 +28,6 @@ memalign.o
 endianba.o
 pread_pwrite_ba.o
 bigarray.o
+sysconf.o
 common.o
 # OASIS_STOP
diff --git a/src/sysconf.c b/src/sysconf.c
new file mode 100644
index 0000000..e8afa85
--- /dev/null
+++ b/src/sysconf.c
@@ -0,0 +1,68 @@
+/*
+ * Binding to sysconf
+ *
+ * Copyright 2013 
+ *
+ * License LGPL-2.1 with OCaml linking static exception
+ *
+ * author: Roman Vorobets
+ *
+ */
+
+#define EXTUNIX_WANT_SYSCONF
+#include "config.h"
+
+#if defined(EXTUNIX_HAVE_SYSCONF)
+
+static int caml_confs[] =
+  {
+    _SC_ARG_MAX,
+    _SC_CHILD_MAX,
+    _SC_HOST_NAME_MAX,
+    _SC_LOGIN_NAME_MAX,
+    _SC_CLK_TCK,
+    _SC_OPEN_MAX,
+    _SC_PAGESIZE,
+    _SC_RE_DUP_MAX,
+    _SC_STREAM_MAX,
+    _SC_SYMLOOP_MAX,
+    _SC_TTY_NAME_MAX,
+    _SC_TZNAME_MAX,
+    _SC_VERSION,
+    _SC_BC_BASE_MAX,
+    _SC_BC_DIM_MAX,
+    _SC_BC_SCALE_MAX,
+    _SC_BC_STRING_MAX,
+    _SC_COLL_WEIGHTS_MAX,
+    _SC_EXPR_NEST_MAX,
+    _SC_LINE_MAX,
+    _SC_2_VERSION,
+    _SC_2_C_DEV,
+    _SC_2_FORT_DEV,
+    _SC_2_FORT_RUN,
+    _SC_2_LOCALEDEF,
+    _SC_2_SW_DEV,
+  };
+
+CAMLprim value caml_extunix_sysconf(value name)
+{
+  int errcode = 0;
+  int sc_name = 0;
+  long sc     = -1;
+
+  CAMLparam1(name);
+
+  sc_name = caml_confs[Int_val(name)];
+
+  sc = sysconf(sc_name);
+
+  if (-1 == sc && EINVAL == errno)
+  {
+    unix_error(errno, "sysconf", Nothing);
+  };
+
+  CAMLreturn(caml_copy_int32(sc));
+}
+
+#endif
+
